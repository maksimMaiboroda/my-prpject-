{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/UserItem/UserItem.module.css","components/Dialogs/UserMessageItem/UserMessageItem.module.css","components/Dialogs/NewMessageForm/NewMessageForm.module.css","components/Dialogs/UserItem/UserItem.jsx","components/Dialogs/UserMessageItem/UserMessageItem.jsx","components/Dialogs/NewMessageForm/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","UserItem","props","path","urlD","className","classes","userElements","to","activeClassName","activeLink","user__item","user__ava","userAva","user__name","userName","UserMessageItem","massage__item","text","messageText","maxLength50","maxLengthCreator","NewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","textareaWrap","Field","textarea","component","Textarea","name","validate","required","placeholder","btnTextarea","type","Dialogs","newDialogsData","oldDialogsData","map","user","key","id","newMessageData","oldMessageData","massage","dialogs","userList","massageList","newMessageAdd","formDatta","addMessageActionCreator","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","Comment","RedirectComponent","this","React","Component"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,YAAc,6BAA6B,cAAgB,+BAA+B,kBAAoB,mCAAmC,oBAAsB,uC,oBCAjQD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,WAAa,6BAA6B,WAAa,+B,oBCAvHD,EAAOC,QAAU,CAAC,cAAgB,yC,oBCAlCD,EAAOC,QAAU,CAAC,aAAe,qCAAqC,SAAW,iCAAiC,YAAc,sC,iHCoBjHC,EAjBE,SAAAC,GACf,IAAIC,EAAO,YAAcD,EAAME,KAE/B,OACE,yBAAKC,UAAWC,IAAQC,cACtB,kBAAC,IAAD,CACEC,GAAIL,EACJM,gBAAiBH,IAAQI,WACzBL,UAAWC,IAAQK,YAEnB,yBAAKN,UAAWC,IAAQM,WAAYV,EAAMW,SAC1C,yBAAKR,UAAWC,IAAQQ,YAAaZ,EAAMa,a,kBCJpCC,EARS,SAAAd,GACtB,OACE,yBAAKG,UAAWC,IAAQW,eACtB,yBAAKZ,UAAWC,IAAQY,MAAOhB,EAAMiB,e,oDCArCC,EAAcC,YAAiB,IAqBtBC,EAJaC,YAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAAArB,GACrB,OACE,0BAAMuB,SAAUvB,EAAMwB,cACrB,yBAAKrB,UAAWC,IAAQqB,cAAxB,IAAwC,kBAACC,EAAA,EAAD,CACrCvB,UAAWC,IAAQuB,SACnBC,UAAWC,IACXC,KAAK,iBACLC,SAAU,CAACC,IAAUd,GACrBe,YAAa,kBAEf,4BAAQ9B,UAAWC,IAAQ8B,YAAaC,KAAK,UAA7C,qBCyBSC,EApCC,SAAApC,GACd,IAAIqC,EAAiBrC,EAAMsC,eAAeC,KAAI,SAAAC,GAAI,OAChD,kBAAC,EAAD,CACEtC,KAAMsC,EAAKtC,KACXS,QAAS6B,EAAK7B,QACdE,SAAU2B,EAAK3B,SACf4B,IAAKD,EAAKE,QAIVC,EAAiB3C,EAAM4C,eAAeL,KAAI,SAAAM,GAAO,OACnD,kBAAC,EAAD,CACE5B,YAAa4B,EAAQ5B,YACrByB,GAAIG,EAAQH,GACZD,IAAKI,EAAQH,QAQjB,OACE,6BACE,yBAAKvC,UAAWC,IAAQ0C,SACtB,yBAAK3C,UAAWC,IAAQ2C,UAAWV,GAEnC,yBAAKlC,UAAWC,IAAQ4C,aAAcL,IAExC,yBAAKxC,UAAWC,IAAQ6C,eACtB,kBAAC,EAAD,CAAqB1B,SAZL,SAAA2B,GACpBlD,EAAMmD,wBAAwBD,EAAUE,sB,wDCtBxCC,EAA6B,SAAAC,GAAK,MAAK,CACzCC,OAAQD,EAAME,KAAKD,S,OCSNE,sBACbC,aAPoB,SAAAJ,GAAK,MAAK,CAC9BK,YAAaL,EAAMK,YACnBrB,eAAgBgB,EAAMK,YAAYrB,eAClCM,eAAgBU,EAAMK,YAAYf,kBAIT,CAAEO,+BDPG,SAAAS,GAAY,IACpCC,EADmC,iLAGrC,OAAKC,KAAK9D,MAAMuD,OACT,kBAACK,EAAYE,KAAK9D,OADM,kBAAC,IAAD,CAAUM,GAAI,eAHR,GACTyD,IAAMC,WAStC,OAHqCN,YAAQL,EAARK,CACnCG,KCFWJ,CAGbrB","file":"static/js/4.615b2bdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3K3oQ\",\"userList\":\"Dialogs_userList__1PPh4\",\"massageList\":\"Dialogs_massageList__12s0N\",\"newMessageAdd\":\"Dialogs_newMessageAdd__39Ph7\",\"newMessageAddText\":\"Dialogs_newMessageAddText__tnNl2\",\"newMessageAddButton\":\"Dialogs_newMessageAddButton__3sBla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userElements\":\"UserItem_userElements__2DJVw\",\"activeLink\":\"UserItem_activeLink__2JMsK\",\"user__item\":\"UserItem_user__item__1ixQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"massage__item\":\"UserMessageItem_massage__item__Uyr0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrap\":\"NewMessageForm_textareaWrap__1Yx6U\",\"textarea\":\"NewMessageForm_textarea__31aU2\",\"btnTextarea\":\"NewMessageForm_btnTextarea__1no06\"};","import React from \"react\";\r\nimport classes from \"./UserItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst UserItem = props => {\r\n  let path = \"/dialogs/\" + props.urlD;\r\n\r\n  return (\r\n    <div className={classes.userElements}>\r\n      <NavLink\r\n        to={path}\r\n        activeClassName={classes.activeLink}\r\n        className={classes.user__item}\r\n      >\r\n        <div className={classes.user__ava}>{props.userAva}</div>\r\n        <div className={classes.user__name}>{props.userName}</div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport classes from \"./UserMessageItem.module.css\";\r\n\r\nconst UserMessageItem = props => {\r\n  return (\r\n    <div className={classes.massage__item}>\r\n      <div className={classes.text}>{props.messageText}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessageItem;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validarion\";\r\nimport classes from \"./NewMessageForm.module.css\"\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst NewMessageForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n     <div className={classes.textareaWrap} > <Field\r\n        className={classes.textarea}\r\n        component={Textarea}\r\n        name=\"newMessageBody\"\r\n        validate={[required, maxLength50]}\r\n        placeholder={\"Post message\"}\r\n      /></div>\r\n      <button className={classes.btnTextarea} type=\"submit\">Send message!</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst NewMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  NewMessageForm\r\n);\r\n\r\nexport default NewMessageFormRedux;\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport UserItem from \"./UserItem/UserItem\";\r\nimport UserMessageItem from \"./UserMessageItem/UserMessageItem\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NewMessageFormRedux from \"./NewMessageForm/NewMessageForm\";\r\n\r\nconst Dialogs = props => {\r\n  let newDialogsData = props.oldDialogsData.map(user => (\r\n    <UserItem\r\n      urlD={user.urlD}\r\n      userAva={user.userAva}\r\n      userName={user.userName}\r\n      key={user.id}\r\n    />\r\n  ));\r\n\r\n  let newMessageData = props.oldMessageData.map(massage => (\r\n    <UserMessageItem\r\n      messageText={massage.messageText}\r\n      id={massage.id}\r\n      key={massage.id}\r\n    />\r\n  ));\r\n\r\n  const addNewMessage = formDatta => {\r\n    props.addMessageActionCreator(formDatta.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.dialogs}>\r\n        <div className={classes.userList}>{newDialogsData}</div>\r\n\r\n        <div className={classes.massageList}>{newMessageData}</div>\r\n      </div>\r\n      <div className={classes.newMessageAdd}>\r\n        <NewMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = state => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = Comment => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n      return <Comment {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport { addMessageActionCreator } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = state => ({\r\n  dialogsPage: state.dialogsPage,\r\n  oldDialogsData: state.dialogsPage.oldDialogsData,\r\n  oldMessageData: state.dialogsPage.oldMessageData\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addMessageActionCreator }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}