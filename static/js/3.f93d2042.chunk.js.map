{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Posts.module.css","assets/img/avaCat.jpg","components/Profile/MyPosts/NewPostForm.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileStatus/ProfileStatusWithHooks.module.css","components/Profile/ProfileDescription/ProfileData/ProfileData.module.css","components/Profile/ProfileDescription/ProfileDataForm/ProfileDataForm.module.css","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileDescription/Contacts/Contacts.jsx","components/Profile/ProfileDescription/ProfileData/ProfileData.jsx","components/Profile/ProfileDescription/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Posts","props","className","classes","postsContainer","src","avaCat","postsAva","item","message","postslikes","href","likesLink","likesCount","likesHeart","aria-hidden","maxLength200","maxLengthCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","textareaWrap","Field","textarea","name","component","Textarea","validate","required","placeholder","btnTextarea","type","MyPosts","React","memo","newPostData","oldPostData","reverse","map","post","key","id","myPosts","formData","addPostActionCreator","newPostText","postBody","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","activateMode","deactivateEditMode","updateStatus","statusContent","onDoubleClick","btnStatus","onClick","onChange","e","currentTarget","value","onBlur","autoFocus","Contacts","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","profileDescriptionContainer","profileDescriptionContent","profileField","profile","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","maxLength50","ProfileDataReduxForm","error","formSummaryError","Input","ProfileInfo","savePhoto","saveProfile","editModeSaveProfileDesc","saveProfileDesc","content","pageProfileContent","contentProfileLeft","avaPrpfile","imgProfile","photos","large","iconUserNoName","target","files","length","contentProfileRight","nameUser","fullName","initialValues","Profile","userId","MyPostsContainer","ProfileContainer","refreshProfile","match","params","autorizedUser","history","push","getUserProfile","getStatus","this","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f93d2042.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__Q-jb7\",\"textareaPost\":\"MyPosts_textareaPost__2SGZb\",\"buttonAddPost\":\"MyPosts_buttonAddPost__1LO7T\",\"postBody\":\"MyPosts_postBody__1Ngz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2oMe2\",\"postsAva\":\"Posts_postsAva__3kSCl\",\"postsContainer\":\"Posts_postsContainer__3f11y\",\"postslikes\":\"Posts_postslikes__txK6J\",\"likesLink\":\"Posts_likesLink__3m7W0\",\"likesHeart\":\"Posts_likesHeart__29t_a\"};","module.exports = __webpack_public_path__ + \"static/media/avaCat.1f20781a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrap\":\"NewPostForm_textareaWrap__1YKpj\",\"textarea\":\"NewPostForm_textarea__2CkLH\",\"btnTextarea\":\"NewPostForm_btnTextarea__BF4VT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headImages\":\"ProfileInfo_headImages__2hWpn\",\"pageProfileContent\":\"ProfileInfo_pageProfileContent__3R8mE\",\"contentProfileLeft\":\"ProfileInfo_contentProfileLeft__2-xwh\",\"contentProfileRight\":\"ProfileInfo_contentProfileRight__2-XuJ\",\"avaPrpfile\":\"ProfileInfo_avaPrpfile__3GV4_\",\"imgProfile\":\"ProfileInfo_imgProfile__124ES\",\"linkSocial\":\"ProfileInfo_linkSocial__1stWA\",\"nameUser\":\"ProfileInfo_nameUser__30Zd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContent\":\"ProfileStatusWithHooks_statusContent__1sChZ\",\"status\":\"ProfileStatusWithHooks_status__1uhQb\",\"btnStatus\":\"ProfileStatusWithHooks_btnStatus__PPcGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDescriptionContainer\":\"ProfileData_profileDescriptionContainer__2Y3d4\",\"profileDescriptionContent\":\"ProfileData_profileDescriptionContent__2am_6\",\"profileField\":\"ProfileData_profileField__ytZFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"ProfileDataForm_formSummaryError__3GesD\"};","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\nimport avaCat from \"../../../../assets/img/avaCat.jpg\";\r\n\r\nconst Posts = props => {\r\n  return (\r\n    <>\r\n      <div className={classes.postsContainer}>\r\n        <img src={avaCat} className={classes.postsAva}></img>\r\n        <div className={classes.item}>{props.message}</div>\r\n      </div>\r\n      <div className={classes.postslikes}>\r\n        <a href=\"#\" className={classes.likesLink}>\r\n         \r\n            {props.likesCount}\r\n            <span className={classes.likesHeart}>\r\n              <i className=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          \r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator\r\n} from \"../../../utils/validators/validarion\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"./NewPostForm.module.css\"\r\n\r\nconst maxLength200 = maxLengthCreator(200);\r\n\r\nconst NewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={classes.textareaWrap}>\r\n        <Field\r\n          className={classes.textarea}\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength200]}\r\n          placeholder={\"Post message\"}\r\n        />\r\n        <div />\r\n      </div>\r\n      <div>\r\n        <button className={classes.btnTextarea} type=\"submit\">Add new post!</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst NewPostFormRedux = reduxForm({\r\n  // a unique name for the form\r\n  form: \"newPost\"\r\n})(NewPostForm);\r\n\r\nexport default NewPostFormRedux;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport NewPostFormRedux from \"./NewPostForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let newPostData = [...props.oldPostData]\r\n    .reverse()\r\n    .map(post => (\r\n      <Posts\r\n\r\n        message={post.message}\r\n        likesCount={post.likesCount}\r\n        key={post.id}\r\n      />\r\n    ));\r\n\r\n  const onSubmit = formData => {\r\n    props.addPostActionCreator(formData.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.myPosts}>\r\n      <h3>My posts</h3>\r\n      <NewPostFormRedux onSubmit={onSubmit} {...props} />\r\n      <div className={classes.postBody}>{newPostData}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    oldPostData: state.profilePage.oldPostData\r\n  };\r\n};\r\n\r\nexport default  connect(mapStateToProps, { addPostActionCreator })(\r\n  MyPosts\r\n);\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./ProfileStatusWithHooks.module.css\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  const activateMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.statusContent} >\r\n      {!editMode && (\r\n        <>\r\n          <div>\r\n            <span className={classes.status} onDoubleClick={activateMode}>\r\n              {props.status}\r\n            </span>\r\n          </div>\r\n          <button className={classes.btnStatus}\r\n            onClick={() => {\r\n              activateMode();\r\n            }}\r\n          >\r\n            Change status\r\n          </button>\r\n        </>\r\n      )}\r\n      {editMode && (\r\n        <>\r\n          <div>\r\n            <input\r\n              onChange={onStatusChange}\r\n              onBlur={deactivateEditMode}\r\n              autoFocus={true}\r\n              value={status}\r\n            ></input>\r\n          </div>\r\n          <button className={classes.btnStatus}\r\n        onClick={() => {\r\n          deactivateEditMode();\r\n        }}\r\n      >\r\n        Change status\r\n      </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <span>{contactTitle}: </span>\r\n      <span>{contactValue}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileData.module.css\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\n\r\nconst ProfileData = props => {\r\n  return (\r\n    <div>\r\n      {props.isOwner && (\r\n        <div>\r\n          <button onClick={props.goToEditMode}>Edit profile</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className={classes.profileDescriptionContainer}>\r\n        <div className={classes.profileDescriptionContent}>\r\n          <span className={classes.profileField}>I'm looking for a job: </span>\r\n          {props.profile.lookingForAJob ? <span>Yes</span> : <span>No</span>}\r\n        </div>\r\n\r\n        {props.profile.lookingForAJob && (\r\n          <div className={classes.profileDescriptionContent}>\r\n            <span className={classes.profileField}>\r\n            Сareer objective::{\" \"}\r\n            </span>\r\n            {props.profile.lookingForAJobDescription}\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.profileDescriptionContent}>\r\n          <span className={classes.profileField}>About me: </span>\r\n          {props.profile.aboutMe}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <span>Contacts: </span>\r\n        {Object.keys(props.profile.contacts).map(key => {\r\n          return (\r\n            <Contacts\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={props.profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileData;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileDataForm.module.css\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator\r\n} from \"../../../../utils/validators/validarion\";\r\nimport { Input, Textarea } from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst ProfileDataForm = ({ handleSubmit, isOwner, error, profile }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n\r\n      {error && <div className={classes.formSummaryError}>{error}</div>}\r\n\r\n      <div className={classes.profileDescriptionContainer}>\r\n        <div className={classes.profileDescriptionContent}>\r\n          <div>\r\n            <label>\r\n              <span>My full name: </span>\r\n              <Field\r\n                name=\"fullName\"\r\n                component={Input}\r\n                type=\"input\"\r\n                value=\"fullName\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <span>I'm looking for a job?: </span>\r\n              <Field\r\n                name=\"lookingForAJob\"\r\n                component={Input}\r\n                type=\"checkbox\"\r\n                value=\"Yes\"\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.profileDescriptionContent}>\r\n          <span className={classes.profileField}>Сareer objective: </span>\r\n\r\n          <Field\r\n            className={classes.textarea}\r\n            component={Textarea}\r\n            name=\"lookingForAJobDescription\"\r\n            validate={[required, maxLength50]}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.profileDescriptionContent}>\r\n          <span className={classes.profileField}>About me: </span>\r\n          <Field\r\n            className={classes.textarea}\r\n            component={Textarea}\r\n            name=\"aboutMe\"\r\n            validate={[required, maxLength50]}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <span>Contacts: </span>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <Field\r\n              name={\"contacts.\" + key}\r\n              key={key}\r\n              placeholder={key}\r\n              component={Input}\r\n              type=\"input\"\r\n            ></Field>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: \"editProfile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport iconUserNoName from \"../../../assets/img/iconUser.png\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileData from \"../ProfileDescription/ProfileData/ProfileData\";\r\nimport ProfileDataReduxForm from \"../ProfileDescription/ProfileDataForm/ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n  editModeSaveProfileDesc,\r\n  saveProfileDesc\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = e => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = formData => {\r\n    saveProfile(formData);\r\n    //setEditMode(false);\r\n  };\r\n\r\n  const goToEditMode = () => {\r\n    saveProfileDesc(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.pageProfileContent}>\r\n        <div className={classes.contentProfileLeft}>\r\n          <div className={classes.avaPrpfile}>\r\n            <img\r\n              className={classes.imgProfile}\r\n              src={profile.photos.large || iconUserNoName}\r\n            ></img>\r\n          </div>\r\n          {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        </div>\r\n        <div className={classes.contentProfileRight}>\r\n          <div className={classes.nameUser}>{profile.fullName}</div>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n          {editModeSaveProfileDesc ? (\r\n            <ProfileDataReduxForm\r\n              initialValues={profile}\r\n              profile={profile}\r\n              onSubmit={onSubmit}\r\n              isOwner={isOwner}\r\n              goToEditMode={goToEditMode}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n              goToEditMode={goToEditMode}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n      saveProfileDesc={props.saveProfileDesc}\r\n       editModeSaveProfileDesc={props.editModeSaveProfileDesc}\r\n      userId={props.userId}\r\n      saveProfile={props.saveProfile}\r\n      savePhoto={props.savePhoto}\r\n      isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  saveProfileDesc\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile = () => {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUser;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n\r\n    this.props.getStatus(userId);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        editModeSaveProfileDesc={this.props.editModeSaveProfileDesc}\r\n        userId={this.props.match.params.userId}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUser: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n  editModeSaveProfileDesc: state.profilePage.editModeSaveProfileDesc\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    saveProfileDesc\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}