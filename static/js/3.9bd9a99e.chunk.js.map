{"version":3,"sources":["components/Profile/ProfileInfo/ProfileDescription/ProfileData.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Posts.module.css","assets/img/avaCat.jpg","components/Profile/MyPosts/NewPostForm.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.module.css","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Posts","props","className","classes","postsContainer","src","avaCat","postsAva","item","message","postslikes","href","likesLink","likesCount","likesHeart","class","aria-hidden","maxLength200","maxLengthCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","textareaWrap","Field","textarea","name","component","Textarea","validate","required","placeholder","btnTextarea","type","MyPosts","React","memo","newPostData","oldPostData","reverse","map","post","kei","id","myPosts","formData","addPostActionCreator","newPostText","postBody","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","activateMode","deactivateEditMode","updateStatus","statusContent","onDoubleClick","btnStatus","onClick","onChange","e","currentTarget","value","onBlur","autoFocus","ProfileData","profileDescriptionContainer","profileDescriptionContent","profileField","profile","lookingForAJob","lookingForAJobDescription","aboutMe","Contacts","contactTitle","contactValue","ProfileInfo","isOwner","savePhoto","content","pageProfileContent","contentProfileLeft","avaPrpfile","imgProfile","photos","large","iconUserNoName","target","files","length","contentProfileRight","nameUser","fullName","Object","keys","contacts","key","Profile","MyPostsContainer","ProfileContainer","refreshProfile","userId","match","params","autorizedUser","history","push","getUserProfile","getStatus","this","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.9bd9a99e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDescriptionContainer\":\"ProfileData_profileDescriptionContainer__3M9sh\",\"profileDescriptionContent\":\"ProfileData_profileDescriptionContent__ND0o6\",\"profileField\":\"ProfileData_profileField__1uKke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__Q-jb7\",\"textareaPost\":\"MyPosts_textareaPost__2SGZb\",\"buttonAddPost\":\"MyPosts_buttonAddPost__1LO7T\",\"postBody\":\"MyPosts_postBody__1Ngz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2oMe2\",\"postsAva\":\"Posts_postsAva__3kSCl\",\"postsContainer\":\"Posts_postsContainer__3f11y\",\"postslikes\":\"Posts_postslikes__txK6J\",\"likesLink\":\"Posts_likesLink__3m7W0\",\"likesHeart\":\"Posts_likesHeart__29t_a\"};","module.exports = __webpack_public_path__ + \"static/media/avaCat.1f20781a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrap\":\"NewPostForm_textareaWrap__1YKpj\",\"textarea\":\"NewPostForm_textarea__2CkLH\",\"btnTextarea\":\"NewPostForm_btnTextarea__BF4VT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headImages\":\"ProfileInfo_headImages__2hWpn\",\"pageProfileContent\":\"ProfileInfo_pageProfileContent__3R8mE\",\"contentProfileLeft\":\"ProfileInfo_contentProfileLeft__2-xwh\",\"contentProfileRight\":\"ProfileInfo_contentProfileRight__2-XuJ\",\"avaPrpfile\":\"ProfileInfo_avaPrpfile__3GV4_\",\"imgProfile\":\"ProfileInfo_imgProfile__124ES\",\"linkSocial\":\"ProfileInfo_linkSocial__1stWA\",\"nameUser\":\"ProfileInfo_nameUser__30Zd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContent\":\"ProfileStatusWithHooks_statusContent__3tvqJ\",\"status\":\"ProfileStatusWithHooks_status__2_VKE\",\"btnStatus\":\"ProfileStatusWithHooks_btnStatus__pCXPs\"};","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\nimport avaCat from \"../../../../assets/img/avaCat.jpg\";\r\n\r\nconst Posts = props => {\r\n  return (\r\n    <>\r\n      <div className={classes.postsContainer}>\r\n        <img src={avaCat} className={classes.postsAva}></img>\r\n        <div className={classes.item}>{props.message}</div>\r\n      </div>\r\n      <div className={classes.postslikes}>\r\n        <a href=\"#\" className={classes.likesLink}>\r\n         \r\n            {props.likesCount}\r\n            <span className={classes.likesHeart}>\r\n              <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          \r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator\r\n} from \"../../../utils/validators/validarion\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"./NewPostForm.module.css\"\r\n\r\nconst maxLength200 = maxLengthCreator(200);\r\n\r\nconst NewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={classes.textareaWrap}>\r\n        <Field\r\n          className={classes.textarea}\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength200]}\r\n          placeholder={\"Post message\"}\r\n        />\r\n        <div />\r\n      </div>\r\n      <div>\r\n        <button className={classes.btnTextarea} type=\"submit\">Add new post!</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst NewPostFormRedux = reduxForm({\r\n  // a unique name for the form\r\n  form: \"newPost\"\r\n})(NewPostForm);\r\n\r\nexport default NewPostFormRedux;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport NewPostFormRedux from \"./NewPostForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let newPostData = [...props.oldPostData]\r\n    .reverse()\r\n    .map(post => (\r\n      <Posts\r\n        message={post.message}\r\n        likesCount={post.likesCount}\r\n        kei={post.id}\r\n      />\r\n    ));\r\n\r\n  const onSubmit = formData => {\r\n    props.addPostActionCreator(formData.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.myPosts}>\r\n      <h3>My posts</h3>\r\n      <NewPostFormRedux onSubmit={onSubmit} {...props} />\r\n      <div className={classes.postBody}>{newPostData}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    oldPostData: state.profilePage.oldPostData\r\n  };\r\n};\r\n\r\nexport default  connect(mapStateToProps, { addPostActionCreator })(\r\n  MyPosts\r\n);\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./ProfileStatusWithHooks.module.css\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  const onStatusChange = e => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  const activateMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.statusContent} >\r\n      {!editMode && (\r\n        <>\r\n          <div>\r\n            <span className={classes.status} onDoubleClick={activateMode}>\r\n              {props.status}\r\n            </span>\r\n          </div>\r\n          <button className={classes.btnStatus}\r\n            onClick={() => {\r\n              activateMode();\r\n            }}\r\n          >\r\n            Change status\r\n          </button>\r\n        </>\r\n      )}\r\n      {editMode && (\r\n        <>\r\n          <div>\r\n            <input\r\n              onChange={onStatusChange}\r\n              onBlur={deactivateEditMode}\r\n              autoFocus={true}\r\n              value={status}\r\n            ></input>\r\n          </div>\r\n          <button className={classes.btnStatus}\r\n        onClick={() => {\r\n          deactivateEditMode();\r\n        }}\r\n      >\r\n        Change status\r\n      </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileData.module.css\";\r\n\r\nconst ProfileData = props => {\r\n  return (\r\n    <div className={classes.profileDescriptionContainer}>\r\n      <div className={classes.profileDescriptionContent}>\r\n        <span className={classes.profileField}>I'm looking for a job: </span>\r\n        {props.profile.lookingForAJob ? <span>Yes</span> : <span>No</span>}\r\n      </div>\r\n      {props.profile.lookingForAJob && (\r\n        <div className={classes.profileDescriptionContent}>\r\n          <span className={classes.profileField}>My professional skills: </span>\r\n          {props.profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div className={classes.profileDescriptionContent}>\r\n        <span className={classes.profileField}>About me: </span>\r\n        {props.profile.aboutMe}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileData;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport iconUserNoName from \"../../../assets/img/iconUser.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileData from \"./ProfileDescription/ProfileData\";\r\nimport ProfileDataForm from \"./ProfileDescription/ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\nconst onMainPhotoSelected = (e) => {\r\n  if (e.target.files.length){\r\n    savePhoto(e.target.files[0])\r\n  }\r\n}\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.pageProfileContent}>\r\n        <div className={classes.contentProfileLeft}>\r\n          <div className={classes.avaPrpfile}>\r\n            <img\r\n              className={classes.imgProfile}\r\n              src={profile.photos.large || iconUserNoName}\r\n            ></img>\r\n          </div>\r\n          {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        </div>\r\n        <div className={classes.contentProfileRight}>\r\n          <div className={classes.nameUser}>{profile.fullName}</div>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n          {/* {editMode ? ( */}\r\n          <ProfileData profile={profile} />\r\n          {/* ) : (\r\n            <ProfileDataForm profile={profile} />\r\n          )} */}\r\n          <div>\r\n            <span>Contacts: </span>\r\n            {Object.keys(profile.contacts).map(key => {\r\n              return (\r\n                <Contacts\r\n                  key={key}\r\n                  contactTitle={key}\r\n                  contactValue={profile.contacts[key]}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <span>{contactTitle}: </span>\r\n      <span>{contactValue}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n      savePhoto={props.savePhoto}\r\n      isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile = () => {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUser;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n\r\n    this.props.getStatus(userId);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUser: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n  \r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}